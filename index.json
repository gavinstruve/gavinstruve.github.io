[{"content":"","title":"My Work","uri":"/card/projects/"},{"content":"  ","title":"Sports Data Analysis and Visualization","uri":"/2020-3-14-libraries/untitled/"},{"content":" library(reactable) library(tidyverse) ## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.3 ✓ purrr 0.3.4 ## ✓ tibble 3.0.5 ✓ dplyr 1.0.3 ## ✓ tidyr 1.1.2 ✓ stringr 1.4.0 ## ✓ readr 1.4.0 ✓ forcats 0.5.0 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() badfball % separate(Result, into=c(\"Outcome\", \"Score\"), sep=\"\\\\(\") ## # A tibble: 1,100 x 52 ## Game Date HomeAway Opponent Outcome Score PassingCmp PassingAtt PassingPct ##          ## 1 1 10/2…  Nebraska \"W \" 52-1… 20 21 95.2 ## 2 2 10/3… @ Penn St… \"W \" 38-2… 28 34 82.4 ## 3 3 11/7…  Rutgers \"W \" 49-2… 24 28 85.7 ## 4 4 11/2…  Indiana \"W \" 42-3… 18 30 60 ## 5 5 12/5… @ Michiga… \"W \" 52-1… 17 24 70.8 ## 6 6 12/1… N Northwe… \"W \" 22-1… 12 27 44.4 ## 7 7 1/1/… N Clemson* \"W \" 49-2… 22 28 78.6 ## 8 1 10/2…  Penn St… \"W \" 36-3… 19 36 52.8 ## 9 2 10/3… @ Rutgers \"W \" 37-2… 17 26 65.4 ## 10 3 11/7…  Michigan \"W \" 38-2… 30 50 60 ## # … with 1,090 more rows, and 43 more variables: PassingYds , ## # PassingTD , RushingAtt , RushingYds , RushingAvg , ## # RushingTD , OffensivePlays , OffensiveYards , ## # OffenseAvg , FirstDownPass , FirstDownRush , ## # FirstDownPen , FirstDownTotal , Penalties , ## # PenaltyYds , Fumbles , Interceptions , TotalTurnovers , ## # TeamFull , TeamURL , DefPassingCmp , DefPassingAtt , ## # DefPassingPct , DefPassingYds , DefPassingTD , ## # DefRushingAtt , DefRushingYds , DefRushingAvg , ## # DefRushingTD , DefPlays , DefYards , DefAvg , ## # DefFirstDownPass , DefFirstDownRush , DefFirstDownPen , ## # DefFirstDownTotal , DefPenalties , DefPenaltyYds , ## # DefFumbles , DefInterceptions , DefTotalTurnovers , ## # Team , Conference  As you can see, I’ve split result into two columns, outcome and score, using separate. I had to use \\ because parentheses are a special character. badfball %% separate(Result, into=c(\"Outcome\", \"Score\"), sep=\"\\\\(\") %% mutate(Score=gsub(\")\",\"\", Score)) %% head() ## # A tibble: 6 x 52 ## Game Date HomeAway Opponent Outcome Score PassingCmp PassingAtt PassingPct ##          ## 1 1 10/2…  Nebraska \"W \" 52-17 20 21 95.2 ## 2 2 10/3… @ Penn St… \"W \" 38-25 28 34 82.4 ## 3 3 11/7…  Rutgers \"W \" 49-27 24 28 85.7 ## 4 4 11/2…  Indiana \"W \" 42-35 18 30 60 ## 5 5 12/5… @ Michiga… \"W \" 52-12 17 24 70.8 ## 6 6 12/1… N Northwe… \"W \" 22-10 12 27 44.4 ## # … with 43 more variables: PassingYds , PassingTD , ## # RushingAtt , RushingYds , RushingAvg , RushingTD , ## # OffensivePlays , OffensiveYards , OffenseAvg , ## # FirstDownPass , FirstDownRush , FirstDownPen , ## # FirstDownTotal , Penalties , PenaltyYds , Fumbles , ## # Interceptions , TotalTurnovers , TeamFull , TeamURL , ## # DefPassingCmp , DefPassingAtt , DefPassingPct , ## # DefPassingYds , DefPassingTD , DefRushingAtt , ## # DefRushingYds , DefRushingAvg , DefRushingTD , ## # DefPlays , DefYards , DefAvg , DefFirstDownPass , ## # DefFirstDownRush , DefFirstDownPen , DefFirstDownTotal , ## # DefPenalties , DefPenaltyYds , DefFumbles , ## # DefInterceptions , DefTotalTurnovers , Team , ## # Conference  Adding gsub allows us to remove the trailing “)” in the score column. newbadfball % separate(Result, into=c(\"Outcome\", \"Score\"), sep=\"\\\\(\") %% mutate(Score=gsub(\")\",\"\", Score)) %% separate(Score, into=c(\"TeamScore\", \"OpponentScore\"), sep=\"-\" ) %% mutate(TeamScore = as.numeric(TeamScore), OpponentScore = as.numeric(OpponentScore)) This separates score into teamscore and opponentscore using separate and splitting them at the “-”. It also creates a new dataframe called newbadfball that’s updated. I also mutated to add as.numeric which makes sure TeamScore and OpponentScore are numeric values, so R doesn’t mistake it for text and we’re able to make a differential. differential % mutate(diff = TeamScore - OpponentScore) differential %% filter(diff  65) - worstgames I created a new dataframe called differential here that subtracts the opponent score from the team score of every game to get the scoring margin/point differential. I also created a dataframe called worstgames that only shows games in which a team won by over 65 points. It appears there was only one such game in this dataset, a 73-7 victory by Clemson over Georgia Tech. Ironically, Tech holds the record for the largest margin of victory all time for a Division One team, a 222-0 win in 1916. differential ## # A tibble: 1,100 x 54 ## Game Date HomeAway Opponent Outcome TeamScore OpponentScore PassingCmp ##         ## 1 1 10/2…  Nebraska \"W \" 52 17 20 ## 2 2 10/3… @ Penn St… \"W \" 38 25 28 ## 3 3 11/7…  Rutgers \"W \" 49 27 24 ## 4 4 11/2…  Indiana \"W \" 42 35 18 ## 5 5 12/5… @ Michiga… \"W \" 52 12 17 ## 6 6 12/1… N Northwe… \"W \" 22 10 12 ## 7 7 1/1/… N Clemson* \"W \" 49 28 22 ## 8 1 10/2…  Penn St… \"W \" 36 35 19 ## 9 2 10/3… @ Rutgers \"W \" 37 21 17 ## 10 3 11/7…  Michigan \"W \" 38 21 30 ## # … with 1,090 more rows, and 46 more variables: PassingAtt , ## # PassingPct , PassingYds , PassingTD , RushingAtt , ## # RushingYds , RushingAvg , RushingTD , OffensivePlays , ## # OffensiveYards , OffenseAvg , FirstDownPass , ## # FirstDownRush , FirstDownPen , FirstDownTotal , ## # Penalties , PenaltyYds , Fumbles , Interceptions , ## # TotalTurnovers , TeamFull , TeamURL , DefPassingCmp , ## # DefPassingAtt , DefPassingPct , DefPassingYds , ## # DefPassingTD , DefRushingAtt , DefRushingYds , ## # DefRushingAvg , DefRushingTD , DefPlays , DefYards , ## # DefAvg , DefFirstDownPass , DefFirstDownRush , ## # DefFirstDownPen , DefFirstDownTotal , DefPenalties , ## # DefPenaltyYds , DefFumbles , DefInterceptions , ## # DefTotalTurnovers , Team , Conference , diff  worstgames ## # A tibble: 1 x 54 ## Game Date HomeAway Opponent Outcome TeamScore OpponentScore PassingCmp ##         ## 1 5 10/1… @ Georgia… \"W \" 73 7 33 ## # … with 46 more variables: PassingAtt , PassingPct , ## # PassingYds , PassingTD , RushingAtt , RushingYds , ## # RushingAvg , RushingTD , OffensivePlays , ## # OffensiveYards , OffenseAvg , FirstDownPass , ## # FirstDownRush , FirstDownPen , FirstDownTotal , ## # Penalties , PenaltyYds , Fumbles , Interceptions , ## # TotalTurnovers , TeamFull , TeamURL , DefPassingCmp , ## # DefPassingAtt , DefPassingPct , DefPassingYds , ## # DefPassingTD , DefRushingAtt , DefRushingYds , ## # DefRushingAvg , DefRushingTD , DefPlays , DefYards , ## # DefAvg , DefFirstDownPass , DefFirstDownRush , ## # DefFirstDownPen , DefFirstDownTotal , DefPenalties , ## # DefPenaltyYds , DefFumbles , DefInterceptions , ## # DefTotalTurnovers , Team , Conference , diff  library(ggplot2) ggplot()+ geom_point(data=differential, aes(x=TeamScore, y=OpponentScore), color=\"grey\") Ggplot helps create a chart showing the differential of about every game this season. As can be expected, it’s all over the place. The best possible scenario is landing in the bottom right corner, meaning you scored a lot of points and let up very few, and the top left is the exact opposite. ggplot() + geom_point(data=differential, aes(x=TeamScore, y=OpponentScore), color=\"grey\") + geom_point(data=worstgames, aes(x=TeamScore, y=OpponentScore), color=\"red\") Now, using the worstgames dataframe, I’ve marked the single game that met that standard (a 65 point victory) in red. library(ggalt) ## Registered S3 methods overwritten by 'ggalt': ## method from ## grid.draw.absoluteGrob ggplot2 ## grobHeight.absoluteGrob ggplot2 ## grobWidth.absoluteGrob ggplot2 ## grobX.absoluteGrob ggplot2 ## grobY.absoluteGrob ggplot2 ggplot() + geom_point(data=differential, aes(x=TeamScore, y=OpponentScore), color=\"grey\") + geom_point(data=worstgames, aes(x=TeamScore, y=OpponentScore), color=\"red\") + geom_encircle(data=worstgames, aes(x=TeamScore, y=OpponentScore), s_shape=.5, expand=.03, colour=\"red\") I added geom_encircle to bring more attention to our outlier from the worstgames dataset. ggplot() + geom_point(data=differential, aes(x=TeamScore, y=OpponentScore), color=\"grey\") + geom_point(data=worstgames, aes(x=TeamScore, y=OpponentScore), color=\"red\") + geom_encircle(data=worstgames, aes(x=TeamScore, y=OpponentScore), s_shape=.5, expand=.03, colour=\"red\") + labs(title=\"Point differential of every game this season\", subtitle=\"Only one game had a scoring margin of over 65 points.\", x=\"Points Scored\", y=\"Points Allowed\") Now I’ve added a title and subtitle using labs and changed the x and y axes labels. ggplot() + geom_point(data=differential, aes(x=TeamScore, y=OpponentScore), color=\"grey\") + geom_point(data=worstgames, aes(x=TeamScore, y=OpponentScore), color=\"red\") + geom_encircle(data=worstgames, aes(x=TeamScore, y=OpponentScore), s_shape=.5, expand=.03, colour=\"red\") + labs(title=\"Point differential of every game this season\", subtitle=\"Only one game had a scoring margin of over 65 points.\", x=\"Points Scored\", y=\"Points Allowed\", caption=\"Source: Sports Reference | By Gavin Struve\") + theme_minimal() + theme( plot.title = element_text(size = 16, face = \"bold\"), axis.title = element_text(size = 8), plot.subtitle = element_text(size=10), panel.grid.minor = element_blank() ) Here I have added a minimal theme, bolded the title and added a source and credit line at the bottom. ","title":"Trying new table libraries ","uri":"/post/2021/03/29/trying-new-table-libraries/"},{"content":"I’m a sophomore at the University of Nebraska-Lincoln graduating in the spring of 2023 with a double-major in sports journalism and advertising \u0026 public relations. I made this page for a course, SPMC 350 Sports Data Analysis \u0026 Visualization, to host my semester projects on. I’m a sports writer for the student newspaper, the Daily Nebraskan, predominantly covering basketball and distance running. I also have an interest in sports statistics, so I am hoping this class will provide an outlet and show me how to use it.\n","title":"About Gavin Struve","uri":"/about/"},{"content":"Below is a full list of posts and pages on this website ordered by date.\n","title":"Sitemap","uri":"/sitemap/"}]
